jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
    - kubernetes:
        containerCap: 10
        containerCapStr: "10"
        jenkinsTunnel: "jenkins-agent:50000"
        jenkinsUrl: "http://172.18.0.100"
        maxRequestsPerHost: 32
        maxRequestsPerHostStr: "32"
        name: "kubernetes"
        namespace: "jenkins"  # Jenkins 네임스페이스로 설정
        podLabels:
          - key: "jenkins/jenkins-jenkins-slave"
            value: "true"
        serverUrl: "https://kubernetes.default"
        templates:
          - name: "default"
            label: "jenkins-jenkins-slave"  # 공백 제거
            serviceAccount: "jenkins"
            nodeUsageMode: NORMAL
            podRetention: "never"
            hostNetwork: false
            yamlMergeStrategy: "override"
            # 권한 문제 해결을 위한 securityContext 추가
            securityContext:
              runAsUser: 1000       # jenkins 사용자 ID
              runAsGroup: 1000      # jenkins 그룹 ID
              fsGroup: 993          # 호스트의 docker 그룹 GID (993)
            containers:
              - name: "jnlp"
                image: "jenkins/inbound-agent:4.3-4"
                workingDir: "/home/jenkins"
                command:
                  - "sh"
                  - "-c"
                  - |
                    # 필요한 라이브러리 설치
                    apt-get update && \
                    apt-get install -y libltdl7 && \
                    exec /usr/local/bin/jenkins-agent "\${computer.jnlpmac}" "\${computer.name}"
                args: ""
                envVars:
                  - envVar:
                      key: "JENKINS_URL"
                      value: "http://172.18.0.100"
                resourceLimitCpu: "512m"
                resourceLimitMemory: "512Mi"
                resourceRequestCpu: "512m"
                resourceRequestMemory: "512Mi"
            volumes:
              - hostPathVolume:
                  hostPath: "/usr/local/bin/kubectl"  # 실제 kubectl 경로
                  mountPath: "/usr/bin/kubectl"
              - hostPathVolume:
                  hostPath: "/usr/bin/docker"  # Docker 경로
                  mountPath: "/usr/bin/docker"
              - hostPathVolume:
                  hostPath: "/var/run/docker.sock"  # Docker 소켓 파일
                  mountPath: "/var/run/docker.sock"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  disabledAdministrativeMonitors:
    - "hudson.model.UpdateCenter$CoreUpdateMonitor"
    - "jenkins.diagnostics.RootUrlNotSetMonitor"
    - "jenkins.security.UpdateSiteWarningsMonitor"
  labelAtoms:
    - name: "master"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 2  # 노드의 executors 수 설정
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm: "legacy"
  slaveAgentPort: 50000
  updateCenter:
    sites:
      - id: "default"
        url: "https://raw.githubusercontent.com/IaC-Source/Jenkins-updateCenter/main/update-center.json"
  views:
    - all:
        name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  sSHD:
    port: -1
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitSCM:
    createAccountBasedOnEmail: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
tool:
  git:
    installations:
      - home: "git"
        name: "Default"

